#pragma once

#include <sal.h>

class IKernelBreak
{
public:
	virtual
	~IKernelBreak()
	{
	}

	__checkReturn
	virtual
	bool
	WriteSomePtrToKernel(
		__in void* addr,
		__in size_t ptr = -1 //by default highest value
		) = 0;
};

class IKernel
{
public:
	virtual 
	~IKernel()
	{
	}

	virtual
	__checkReturn
	bool
	WriteKernelMemory(
		__in_bcount(size) void* addr,
		__in_bcount(size) const void* buff,
		__in size_t size
		) = 0;


	virtual
	__checkReturn
	bool
	ReadKernelMemory(
		__in_bcount(size) const void* addr,
		__inout_bcount(size) void* buff,
		__in size_t size
		) = 0;
};
