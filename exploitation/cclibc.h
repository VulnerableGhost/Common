#pragma once

#include "../base/Singleton.hpp"
#include "../base/State.h"
#if 0
extern CCtx* gLibc;

class CHeapLibc :
	public CState,
	public CSingleton<CHeapLibc>
{
	friend class CSingleton<CHeapLibc>;
	CHeapLibc();

	friend class CPoolLibc;
	CState*
	SwitchCallback(
		__inout CCtx* ctx
		) override;
public:
	void 
	Switch(
		__inout CCtx* ctx
		) override;
};

class CPoolLibc :
	public CState,
	public CSingleton<CPoolLibc>
{
	friend class CSingleton<CPoolLibc>;
	CPoolLibc();

	friend class CHeapLibc;
	CState*
	SwitchCallback(
		__inout CCtx* ctx
		) override;
public:
	void 
	Switch(
		__inout CCtx* ctx
		) override;
};

class CAutoLibcSwitch
{
public:
	CAutoLibcSwitch()
	{
		gLibc->Switch();
	}
	~CAutoLibcSwitch()
	{
		gLibc->Switch();
	}
};
#endif
